<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myEducation.inside.dao.UserRoleDao">


	<sql id="table">userrole</sql>
	<sql id="columns">id,roleid,userid,createtime</sql>
	<select id="selectByUserId" resultType="Integer">
		select roleid from <include refid="table"></include>
		join role on userrole.roleid = role.id
		where userid = #{userId} and role.status = 0
	</select>
	<select id="selectByRoleId" resultType="HashMap">
		select userrole.id ,user.name,company.name as company,userrole.createTime from user
		join userrole on user.id = userrole.userid
		join company on user.companyid = company.id
		where userrole.roleid = #{params.roleId}
		order by userrole.createtime desc
	</select>
	<select id="selectUserListByRoleId" resultType="HashMap">
		select id as value,name as label from user where id not in (select userid from userrole where roleid = #{roleId})
	</select>
	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="UserRole">
		insert into <include refid="table"></include>(roleid,userid)
		values(#{roleId},#{userId})
	</insert>
	<update id="update">
		update <include refid="table"></include>
		set roleid=#{roleId},userid=#{userId},createtime=now()
		where id=#{id}
	</update>
	<delete id="delete">
		delete from <include refid="table"></include> where id = #{id}
	</delete>
	<delete id="deleteByRoleAndUserId">
		delete from <include refid="table"></include> where roleid = #{roleId} and userid = #{userId}
	</delete>
	<select id="selectByRoleAndUserId" resultType="UserRole">
		select <include refid="columns"></include> from <include refid="table"></include>
		where roleid = #{roleId} and userid = #{userId}
	</select>
</mapper>