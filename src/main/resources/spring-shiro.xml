<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:util="http://www.springframework.org/schema/util"  
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
       xsi:schemaLocation="  
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">  
  
    <description>apache shiro配置</description>  
  
    <!-- 自定义登录认证和权限管理的realm  -->  
    <bean id="myRealm" class="com.myEducation.common.shiro.MyAuthorizingRealm">
    	<property name="defaultPwd" value="${defaultPwd}" />
    	<property name="siteName" value="${siteName}" />
    </bean>  
    
    <!-- Shiro默认会使用Servlet容器的Session,可通过sessionMode属性来指定使用Shiro原生Session -->  
    <!-- 即<property name="sessionMode" value="native"/>,详细说明见官方文档 -->  
    <!-- 这里主要是设置自定义的单Realm应用,若有多个Realm,可使用'realms'属性代替 -->  
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
        <property name="realm" ref="myRealm"/> 
        <property name="sessionManager" ref="redisSessionManager" />
        <property name="cacheManager" ref="cacheManager" />
        <property name="rememberMeManager" ref="rememberMeManager"/>
    </bean>  
    <!-- Shiro主过滤器本身功能十分强大,其强大之处就在于它支持任何基于URL路径表达式的、自定义的过滤器的执行 -->  
    <!-- Web应用中,Shiro可控制的Web请求必须经过Shiro主过滤器的拦截,Shiro对基于Spring的Web应用提供了完美的支持 -->  
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
        <!-- Shiro的核心安全接口,这个属性是必须的 -->  
        <property name="securityManager" ref="securityManager"/> 
        <property name="loginUrl" value="/login" /> 
<!--         <property name="unauthorizedUrl" value="/error/401"/> -->
        <!-- Shiro连接约束配置,即过滤链的定义 -->  
        <!-- 此处可配合我的这篇文章来理解各个过滤连的作用http://blog.csdn.net/jadyer/article/details/12172839 -->  
        <!-- 下面value值的第一个'/'代表的路径是相对于HttpServletRequest.getContextPath()的值来的 -->  
        <!-- authc：该过滤器下的页面必须验证后才能访问,它是Shiro内置的一个拦截器org.apache.shiro.web.filter.authc.FormAuthenticationFilter -->  
        <property name="filterChainDefinitions">  
            <value>  
            	/static/**=anon
                /login=anon
                /photo=anon
                /error/*=anon
                /dashboard/business/** = authc 
            </value>  
        </property>  
    </bean>  
<!--     <bean id="redisSessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager"> -->
<!-- 	    <property name="sessionDAO" ref="redisSessionDAO" /> -->
<!-- 	    <property name="sessionIdCookieEnabled" value="true"/> -->
<!--         <property name="sessionIdCookie" ref="sessionIdCookie"/> -->
<!-- 	</bean> -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<property name="name" value="myEducation.cookie.session.id" />
		<property name="httpOnly" value="true"/>
    </bean>
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">  
	    <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('3AvVhmFLUs0KTA3Kprsdag==')}"/>  
	    <property name="cookie" ref="rememberMeCookie"/>  
	</bean> 
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
	    <constructor-arg value="myEducation.rememberMe"/>  
	    <property name="httpOnly" value="true"/>  
	    <property name="maxAge" value="2592000"/>
	</bean>   
    <bean id="redisManager" class="org.crazycake.shiro.RedisManager">
		<property name="host" value="${redis.host}"/>
		<property name="port" value="${redis.port}"/>
		<property name="expire" value="1800"/>
<!-- 		optional properties: -->
<!-- 		<property name="timeout" value="10000"/> -->
<!-- 		<property name="password" value="123456"/> -->
		
	</bean>
    <bean id="cacheManager" class="org.crazycake.shiro.RedisCacheManager">
		<property name="redisManager" ref="redisManager" />
	</bean>
	
	<bean id="redisSessionDAO" class="org.crazycake.shiro.RedisSessionDAO">
	    <property name="redisManager" ref="redisManager" />
	</bean>
	<!-- shiro redisManager -->
	
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->  
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
</beans>  